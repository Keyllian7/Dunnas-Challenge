<div class="max-w-3xl mx-auto bg-gray-800 text-white p-6 rounded-lg shadow-lg mt-6">
  <div class="flex items-center space-x-4">
    <%= image_tag @user.photo.url, class: "w-20 h-20 rounded-full border-2 border-white object-cover" %>
    <p class="text-2xl"><%= @user.name %></p>
  </div>
    <%= form_for(@user) do |f| %>
    <div class="field mt-6">
      <%= f.label :rg, class: "block text-white text-lg font-medium mb-2" %>
      <%= f.text_field :rg, class: "w-full p-2 rounded-lg bg-gray-800 text-white border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:outline-none",oninput: "this.value = this.value.replace(/[^0-9]/g, '')" %>
    </div>

    <div class="field mt-6">
      <%= f.label :name, class: "block text-white text-lg font-medium mb-2" %>
      <%= f.text_field :name, class: "w-full p-2 rounded-lg bg-gray-800 text-white border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:outline-none" %>
    </div>

    <div class="field mt-6">
      <%= f.label :telephone, class: "block text-white text-lg font-medium mb-2" %>
      <%= f.text_field :telephone, class: "w-full p-2 rounded-lg bg-gray-800 text-white border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:outline-none",oninput: "this.value = this.value.replace(/[^0-9]/g, '')" %>
    </div>

    <div class="field mt-6">
      <%= f.label :email, class: "block text-white text-lg font-medium mb-2" %>
      <%= f.text_field :email, class: "w-full p-2 rounded-lg bg-gray-800 text-white border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:outline-none" %>
    </div>

    <div class="field mt-6">
      <%= f.label :cpf, class: "block text-white text-lg font-medium mb-2" %>
      <%= f.text_field :cpf, class: "w-full p-2 rounded-lg bg-gray-800 text-white border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:outline-none",oninput: "this.value = this.value.replace(/[^0-9]/g, '')" %>
    </div>

    <div class="field">
      <%= f.label :photo, class: "block text-white text-lg font-medium mb-2" %>
      <%= f.file_field :photo, class: "w-full p-2 rounded-lg bg-gray-800 text-white border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:outline-none " %>
    </div>

    <div class="field mb-4 flex items-center space-x-4 justify-between">
      <div class="field mb-4">
        <%= f.label :role, class: "block text-white text-lg font-medium" %><br />
        <%= f.select :role, User.roles.keys.map { |s| [s.humanize, s] }, { selected: @user.role },
        { id: "user_role", class: "w-full p-3 rounded-lg bg-gray-800 text-white border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:outline-none" } %>
      </div>

      <div id="unit_field" class="field mb-4" style="display: none;">
        <%= f.label :unit_id, class: "block text-white text-lg font-medium" %><br />
        <%= f.select :unit_id, [[nil, "Select a unit"]] + Unit.all.map { |u| [u.name, u.id] }, { selected: @user.unit_id }, 
        { id: "user_unit_id", class: "w-full p-3 rounded-lg bg-gray-800 text-white border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:outline-none" } %>
      </div>

      <div id="sector_field" class="field mb-4" style="display: none;">
        <%= f.label :sector_id, class: "block text-white text-lg font-medium" %><br />
        <%= f.select :sector_id, [[nil, "Select a sector"]] + Sector.all.map { |s| [s.name, s.id] }, { selected: @user.sector_id }, 
        { id: "user_sector_id", class: "w-full p-3 rounded-lg bg-gray-800 text-white border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:outline-none" } %>
      </div>
    </div>

    <div class="actions mb-6">
      <%= f.submit "Update", class: "w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg transition mt-6" %>
    </div>

    <%= link_to "Back", :back, class: "w-full bg-gray-600 hover:bg-gray-700 text-white font-semibold py-2 px-4 mt-6 rounded-lg transition"%>
  <% end %>
</div>

<script>

document.addEventListener("turbo:load", function () {
  const roleSelect = document.getElementById("user_role");
  const unitField = document.getElementById("unit_field");
  const sectorField = document.getElementById("sector_field");
  const unitSelect = document.getElementById("user_unit_id");
  const sectorSelect = document.getElementById("user_sector_id");

  function toggleFields() {
    const role = roleSelect.value;

    unitField.style.display = "none";
    sectorField.style.display = "none";

    if (role === "attendant") {
      unitField.style.display = "block";
    } else if (role === "employee") {
      if (unitSelect.value) {
        sectorField.style.display = "block";
        loadSectors(unitSelect.value);
      }
      unitField.style.display = "block";
    }
  }

  function loadSectors(unitId) {
    fetch(`/units/${unitId}/sectors`)
      .then(response => response.json())
      .then(sectors => {
        sectorSelect.innerHTML = "<option value=''>Select a sector</option>";
        sectors.forEach(sector => {
          const option = document.createElement("option");
          option.value = sector.id;
          option.textContent = sector.name;
          if (sector.id == "<%= @user.sector_id %>") {
          option.selected = true;
          }
          sectorSelect.appendChild(option);
        });
      })
      .catch(error => console.error('Error loading sectors:', error));
  }

  roleSelect.addEventListener("change", toggleFields);
  unitSelect.addEventListener("change", toggleFields);

  setTimeout(() => {
    toggleFields();
  }, 100);
});

</script>